# https://engineering.teknasyon.com/a-simple-guide-to-version-catalog-implementation-in-android-17d0ff3fd1f
# https://developer.android.com/build/migrate-to-catalogs
# -------------------------------------------------------
# ----------------------- versions ----------------------
# -------------------------------------------------------

[versions]
agp = "8.3.2"
kotlin = "1.9.25"
minSdk = "21"
compileSdk = "34"
targetSdk = "34"
appcompat = "1.7.0"
googleMaterial = "1.12.0"
coreKtx= "1.13.1"
gson = "2.11.0"
recyclerView = "1.3.2"
lifecycle = "2.8.7"
retrofit = "2.11.0"
okHttp = "4.12.0"
lottie = "6.4.0"
koin = "3.5.3"
jUnit = "4.13.2"
jUnitExt = "1.2.1"
espressoCore = "3.6.1"
mockk = "1.13.9"
coreTesting = "2.2.0"
coroutine = "1.7.3"
composeBom = "2025.01.01"
composeKotlinCompiler = "1.5.15"
detekt = "1.23.3"


[libraries]
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
googleMaterial = { module = "com.google.android.material:material", version.ref = "googleMaterial" }
coreKtx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
material3 = { module = "androidx.compose.material3:material3" }
recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerView" }
lifecycleViewModelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycleLiveDataKtx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }

# Networking
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitConverter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okHttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
okHttpInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp" }


lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }
lottieCompose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }
koin = { module = "io.insert-koin:koin-android", version.ref = "koin" }

# Testin
jUnit = { module = "junit:junit", version.ref = "jUnit" }
jUnitExt = { module = "androidx.test.ext:junit", version.ref = "jUnitExt" }
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
coreTesting = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
coroutineTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutine" }

# Compose
composeBom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
uiTestJunit4 = { module = "androidx.compose.ui:ui-test-junit4" }
uiTestManifest = { module = "androidx.compose.ui:ui-test-manifest" }
uiTooling = { module = "androidx.compose.ui:ui-tooling" }
uiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }