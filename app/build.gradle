apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'



def versionMajor = 1
def versionMinor = 2
def versionPatch = 0
// version name of "1.2.3" and version code of 10203  for versionMajor = 1 versionMinor = 2 versionPatch = 3

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.hemraj.hackernews"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.core:core-ktx:${versions.core_ktx}"
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerview}"

    /*
    Contains predefine solution for cancelling coroutine when view model destroyed (ViewModelScope)
    https://developer.android.com/topic/libraries/architecture/coroutines
    */
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"

    /*
    Used for liveDataBuilder, Emit etc
    https://developer.android.com/topic/libraries/architecture/coroutines
    */
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"

    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"

    //okhttp
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"


    //Kotlin co-routines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"

    //Lib for animation
    implementation "com.airbnb.android:lottie:${versions.lottie}"

    //Koin Dependency injection lib
    implementation "org.koin:koin-androidx-viewmodel:${versions.koin_version}"
    implementation "org.koin:koin-core:${versions.koin_version}"


    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "android.arch.core:core-testing:${versions.coreTesting}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.nhaarmanMockito}"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
