android {
    lint {
        // Use (or create) a baseline file for issues that should not be reported
        baseline file("lint-baseline.xml")
        // if true, treat all warnings as errors
        warningsAsErrors = true
        // if true, only report errors
        ignoreWarnings = false
        warning 'LintBaseline'
        // set to true to turn off analysis progress reporting by lint
        quiet = true
        // if true, stop the gradle build if errors are found
        abortOnError = true
        // set to true to have all release builds run lint on issues with severity=fatal
        // and abort the build (controlled by abortOnError above) if fatal issues are found
        checkReleaseBuilds = true
        // if true, emit full/absolute paths to files with errors (true by default)
        //absolutePaths = true
        // if true, check all issues, including those that are off by default
        checkAllWarnings = true
        // if true, don't include source code lines in the error output
        noLines = false
        // if true, show all locations for an error, do not truncate lists, etc.
        showAll = true
        // whether lint should include full issue explanations in the text error output
        explainIssues = true
        // Fallback lint configuration (default severities, etc.)
        lintConfig = file("default-lint.xml")
        // Normally most lint checks are not run on test sources (except the checks
        // dedicated to looking for mistakes in unit or instrumentation tests, unless
        // ignoreTestSources is true). You can turn on normal lint checking in all
        // sources with the following flag, false by default:
        checkTestSources true
        // Like checkTestSources, but always skips analyzing tests -- meaning that it
        // also ignores checks that have explicitly asked to look at test sources, such
        // as the unused resource check.
        ignoreTestSources true
        // Normally lint will skip generated sources, but you can turn it on with this flag
        checkGeneratedSources true
        // Normally lint will analyze all dependencies along with each module; this ensures
        // that lint can correctly (for example) determine if a resource declared in a library
        // is unused; checking only the library in isolation would not be able to identify this
        // problem. However, this leads to quite a bit of extra computation; a library is
        // analyzed repeatedly, for each module that it is used in.
        checkDependencies false


        //******************* Reporting *********************
        // if true, generate an XML report for use by for example Jenkins
        xmlReport true
        // file to write report to (if not specified, defaults to lint-results.xml)
        xmlOutput file("$reportsDir/lint/lint-report.xml")
        // if true, generate an HTML report (with issue explanations, sourcecode, etc)
        htmlReport true
        // optional path to HTML report (default will be lint-results.html in the builddir)
        htmlOutput file("$reportsDir/lint/lint-report.html")
    }
}


